import '../models/questions_item_model.dart';import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/questions_item_model.dart';import 'package:basri_s_application31/presentation/faqs_get_help_screen/models/faqs_get_help_model.dart';part 'faqs_get_help_event.dart';part 'faqs_get_help_state.dart';class FaqsGetHelpBloc extends Bloc<FaqsGetHelpEvent, FaqsGetHelpState> {FaqsGetHelpBloc(FaqsGetHelpState initialState) : super(initialState) { on<FaqsGetHelpInitialEvent>(_onInitialize); on<UpdateExpandableListEvent>(_updateExpandableList); }

_updateExpandableList(UpdateExpandableListEvent event, Emitter<FaqsGetHelpState> emit, ) { List<QuestionsItemModel> newList = List<QuestionsItemModel>.from(state.faqsGetHelpModelObj!.questionsItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(faqsGetHelpModelObj: state.faqsGetHelpModelObj?.copyWith(questionsItemList: newList))); } 
List<QuestionsItemModel> fillQuestionsItemList() { return List.generate(4, (index) => QuestionsItemModel()); } 
_onInitialize(FaqsGetHelpInitialEvent event, Emitter<FaqsGetHelpState> emit, ) async  { emit(state.copyWith(serchController: TextEditingController())); emit(state.copyWith(faqsGetHelpModelObj: state.faqsGetHelpModelObj?.copyWith(questionsItemList: fillQuestionsItemList()))); } 
 }
