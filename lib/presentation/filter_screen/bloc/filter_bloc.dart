import '../models/chipviewhome_item_model.dart';import '../models/options2_item_model.dart';import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/listimg_item_model.dart';import '../models/listbeds_item_model.dart';import '../models/chipviewhome_item_model.dart';import '../models/options2_item_model.dart';import 'package:basri_s_application31/widgets/custom_bottom_bar.dart';import 'package:basri_s_application31/presentation/filter_screen/models/filter_model.dart';part 'filter_event.dart';part 'filter_state.dart';class FilterBloc extends Bloc<FilterEvent, FilterState> {FilterBloc(FilterState initialState) : super(initialState) { on<FilterInitialEvent>(_onInitialize); on<ChangeDropDownEvent>(_changeDropDown); on<ChangeDropDown1Event>(_changeDropDown1); on<ChangeDropDown2Event>(_changeDropDown2); on<ChangeDropDown3Event>(_changeDropDown3); on<UpdateChipViewEvent>(_updateChipView); on<UpdateChipView1Event>(_updateChipView1); on<ChangeDropDown4Event>(_changeDropDown4); }

_onInitialize(FilterInitialEvent event, Emitter<FilterState> emit, ) async  { emit(state.copyWith(filterModelObj: state.filterModelObj?.copyWith(listimgItemList: fillListimgItemList(), listbedsItemList: fillListbedsItemList(), dropdownItemList: fillDropdownItemList(), dropdownItemList1: fillDropdownItemList1(), dropdownItemList2: fillDropdownItemList2(), dropdownItemList3: fillDropdownItemList3(), chipviewhomeItemList: fillChipviewhomeItemList(), options2ItemList: fillOptions2ItemList(), dropdownItemList4: fillDropdownItemList4()))); } 
_changeDropDown(ChangeDropDownEvent event, Emitter<FilterState> emit, ) { emit(state.copyWith(selectedDropDownValue: event.value)); } 
_changeDropDown1(ChangeDropDown1Event event, Emitter<FilterState> emit, ) { emit(state.copyWith(selectedDropDownValue1: event.value)); } 
_changeDropDown2(ChangeDropDown2Event event, Emitter<FilterState> emit, ) { emit(state.copyWith(selectedDropDownValue2: event.value)); } 
_changeDropDown3(ChangeDropDown3Event event, Emitter<FilterState> emit, ) { emit(state.copyWith(selectedDropDownValue3: event.value)); } 
_updateChipView(UpdateChipViewEvent event, Emitter<FilterState> emit, ) { List<ChipviewhomeItemModel> newList = List<ChipviewhomeItemModel>.from(state.filterModelObj!.chipviewhomeItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(filterModelObj: state.filterModelObj?.copyWith(chipviewhomeItemList: newList))); } 
_updateChipView1(UpdateChipView1Event event, Emitter<FilterState> emit, ) { List<Options2ItemModel> newList = List<Options2ItemModel>.from(state.filterModelObj!.options2ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(filterModelObj: state.filterModelObj?.copyWith(options2ItemList: newList))); } 
_changeDropDown4(ChangeDropDown4Event event, Emitter<FilterState> emit, ) { emit(state.copyWith(selectedDropDownValue4: event.value)); } 
List<ListimgItemModel> fillListimgItemList() { return List.generate(2, (index) => ListimgItemModel()); } 
List<ListbedsItemModel> fillListbedsItemList() { return List.generate(2, (index) => ListbedsItemModel()); } 
List<SelectionPopupModel> fillDropdownItemList() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
List<SelectionPopupModel> fillDropdownItemList1() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
List<SelectionPopupModel> fillDropdownItemList2() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
List<SelectionPopupModel> fillDropdownItemList3() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
List<ChipviewhomeItemModel> fillChipviewhomeItemList() { return List.generate(5, (index) => ChipviewhomeItemModel()); } 
List<Options2ItemModel> fillOptions2ItemList() { return List.generate(8, (index) => Options2ItemModel()); } 
List<SelectionPopupModel> fillDropdownItemList4() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
 }
